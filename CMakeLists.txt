cmake_minimum_required(VERSION 3.5)
project(Vein) #指静脉
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
# if(CMAKE_BUILD_TYPE STREQUAL "")
#     set(CMAKE_BUILD_TYPE Release)
# else()
#     set(CMAKE_BUILD_TYPE Debug)
# endif()

add_subdirectory(FingerVein)
add_subdirectory(PalmVein)
add_subdirectory(FrangiFilter)

find_package(OpenCV REQUIRED)

# if(CMAKE_BUILD_TYPE STREQUAL "")
    link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/libopencv_plot460.dll)
    link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/libopencv_imgproc460.dll)
    link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/libopencv_highgui460.dll)
    link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/libopencv_core460.dll)
    link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/libopencv_imgcodecs460.dll)

    file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/libopencv_plot460.dll DESTINATION ${CMAKE_BINARY_DIR})
    file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/libopencv_imgproc460.dll DESTINATION ${CMAKE_BINARY_DIR})
    file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/libopencv_highgui460.dll DESTINATION ${CMAKE_BINARY_DIR})
    file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/libopencv_core460.dll DESTINATION ${CMAKE_BINARY_DIR})
    file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/libopencv_imgcodecs460.dll DESTINATION ${CMAKE_BINARY_DIR})
# else()
#     link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/libopencv_plot460d.dll)
#     link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/libopencv_imgproc460d.dll)
#     link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/libopencv_highgui460d.dll)
#     link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/libopencv_core460d.dll)
#     link_libraries(${CMAKE_CURRENT_SOURCE_DIR}/libopencv_imgcodecs460d.dll)

#     file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/libopencv_plot460d.dll DESTINATION ${CMAKE_BINARY_DIR})
#     file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/libopencv_imgproc460d.dll DESTINATION ${CMAKE_BINARY_DIR})
#     file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/libopencv_highgui460d.dll DESTINATION ${CMAKE_BINARY_DIR})
#     file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/libopencv_core460d.dll DESTINATION ${CMAKE_BINARY_DIR})
#     file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/libopencv_imgcodecs460d.dll DESTINATION ${CMAKE_BINARY_DIR})
# endif()

add_executable(Finger finger.cpp)
target_include_directories( Finger PUBLIC ${OpenCV_INCLUDE_DIRS})
target_link_libraries(Finger ${OpenCV_LIBS} FingerVein )

add_executable(Palm palm.cpp)
target_include_directories( Palm PUBLIC ${OpenCV_INCLUDE_DIRS})
target_link_libraries(Palm ${OpenCV_LIBS}  PalmVein)
